@model HasatEmlak.Models.Entities.Property

@{
    ViewData["Title"] = Model.Title;
    var similarProperties = ViewBag.SimilarProperties as IEnumerable<HasatEmlak.Models.Entities.Property>;
}

<!-- Property Header -->
<div class="bg-light py-4">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-md-8">
                <nav aria-label="breadcrumb" class="mb-2">
                    <ol class="breadcrumb mb-0">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Ana Sayfa</a></li>
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Property")">İlanlar</a></li>
                        <li class="breadcrumb-item active">@Model.Title</li>
                    </ol>
                </nav>
                <h1 class="h3 mb-2">@Model.Title</h1>
                <p class="text-muted mb-0">
                    <i class="fas fa-map-marker-alt me-1"></i>
                    @Model.Address, @Model.District?.Name, @Model.City?.Name
                </p>
            </div>
            <div class="col-md-4 text-md-end">
                <div class="d-flex gap-2 justify-content-md-end">
                    <button class="btn btn-outline-primary" id="favoriteBtn">
                        <i class="far fa-heart me-1"></i>Favorilere Ekle
                    </button>
                    <button class="btn btn-outline-secondary" onclick="window.print()">
                        <i class="fas fa-print me-1"></i>Yazdır
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container py-4">
    <div class="row">
        <!-- Main Content -->
        <div class="col-lg-8 mb-4">
            <!-- Image Gallery -->
            <div class="mb-4">
                @if (Model.PropertyImages != null && Model.PropertyImages.Any())
                {
                    <div id="propertyCarousel" class="carousel slide shadow rounded" data-bs-ride="carousel">
                        <div class="carousel-indicators">
                            @for (int i = 0; i < Model.PropertyImages.Count(); i++)
                            {
                                <button type="button" data-bs-target="#propertyCarousel" data-bs-slide-to="@i"
                                        class="@(i == 0 ? "active" : "")" aria-label="Slide @(i + 1)"></button>
                            }
                        </div>
                        <div class="carousel-inner rounded">
                            @foreach (var image in Model.PropertyImages.OrderBy(img => img.DisplayOrder))
                            {
                                <div class="carousel-item @(Model.PropertyImages.First() == image ? "active" : "")">
                                    <img src="/@image.ImagePath" class="d-block w-100" style="height: 400px; object-fit: cover;" alt="@image.AltText">
                                </div>
                            }
                        </div>
                        <button class="carousel-control-prev" type="button" data-bs-target="#propertyCarousel" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#propertyCarousel" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    </div>
                }
                else
                {
                    <div class="rounded bg-light d-flex align-items-center justify-content-center" style="height: 400px;">
                        <div class="text-center text-muted">
                            <i class="fas fa-image fa-3x mb-3"></i>
                            <p>Görsel bulunmuyor</p>
                        </div>
                    </div>
                }
            </div>

            <!-- Property Features -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0"><i class="fas fa-info-circle me-2"></i>Emlak Özellikleri</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        @if (Model.Area.HasValue)
                        {
                            <div class="col-md-4 col-6 mb-3">
                                <div class="feature-item text-center p-3 border rounded">
                                    <i class="fas fa-expand-arrows-alt text-primary fa-2x mb-2"></i>
                                    <div class="fw-bold">@Model.Area m²</div>
                                    <small class="text-muted">Alan</small>
                                </div>
                            </div>
                        }
                        @if (Model.RoomCount.HasValue)
                        {
                            <div class="col-md-4 col-6 mb-3">
                                <div class="feature-item text-center p-3 border rounded">
                                    <i class="fas fa-bed text-primary fa-2x mb-2"></i>
                                    <div class="fw-bold">@Model.RoomCount</div>
                                    <small class="text-muted">Oda Sayısı</small>
                                </div>
                            </div>
                        }
                        @if (Model.BathroomCount.HasValue)
                        {
                            <div class="col-md-4 col-6 mb-3">
                                <div class="feature-item text-center p-3 border rounded">
                                    <i class="fas fa-bath text-primary fa-2x mb-2"></i>
                                    <div class="fw-bold">@Model.BathroomCount</div>
                                    <small class="text-muted">Banyo</small>
                                </div>
                            </div>
                        }
                        @if (Model.FloorNumber.HasValue)
                        {
                            <div class="col-md-4 col-6 mb-3">
                                <div class="feature-item text-center p-3 border rounded">
                                    <i class="fas fa-layer-group text-primary fa-2x mb-2"></i>
                                    <div class="fw-bold">@Model.FloorNumber</div>
                                    <small class="text-muted">Bulunduğu Kat</small>
                                </div>
                            </div>
                        }
                        @if (Model.TotalFloors.HasValue)
                        {
                            <div class="col-md-4 col-6 mb-3">
                                <div class="feature-item text-center p-3 border rounded">
                                    <i class="fas fa-building text-primary fa-2x mb-2"></i>
                                    <div class="fw-bold">@Model.TotalFloors</div>
                                    <small class="text-muted">Toplam Kat</small>
                                </div>
                            </div>
                        }
                        @if (Model.BuildingAge.HasValue)
                        {
                            <div class="col-md-4 col-6 mb-3">
                                <div class="feature-item text-center p-3 border rounded">
                                    <i class="fas fa-calendar text-primary fa-2x mb-2"></i>
                                    <div class="fw-bold">@Model.BuildingAge</div>
                                    <small class="text-muted">Bina Yaşı</small>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Description -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0"><i class="fas fa-align-left me-2"></i>Açıklama</h5>
                </div>
                <div class="card-body">
                    <p class="mb-0">@Html.Raw(Model.Description.Replace("\n", "<br>"))</p>
                </div>
            </div>

            <!-- Location Map -->
            @if (Model.Latitude.HasValue && Model.Longitude.HasValue)
            {
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0"><i class="fas fa-map-marker-alt me-2"></i>Konum</h5>
                    </div>
                    <div class="card-body p-0">
                        <div id="map" style="height: 300px; width: 100%;"></div>
                    </div>
                </div>
            }
        </div>

        <!-- Sidebar -->
        <div class="col-lg-4">
            <!-- Price & Contact -->
            <div class="card shadow-sm sticky-top mb-4">
                <div class="card-body text-center">
                    <div class="property-price display-5 fw-bold text-primary mb-3">
                        @Model.Price.ToString("N0") ₺
                    </div>
                    <div class="mb-3">
                        <span class="badge bg-@(Model.CategoryId == 1 ? "success" : "primary") px-3 py-2 fs-6">
                            @Model.Category?.Name
                        </span>
                        <span class="badge bg-secondary px-3 py-2 fs-6 ms-2">
                            @Model.PropertyType?.Name
                        </span>
                    </div>

                    <!-- Contact Form -->
                    <div class="border-top pt-3">
                        <h6 class="fw-bold mb-3">İletişime Geçin</h6>
                        <form id="contactForm">
                            <input type="hidden" name="PropertyId" value="@Model.Id">
                            <div class="mb-3">
                                <input type="text" class="form-control" name="FullName" placeholder="Ad Soyad" required>
                            </div>
                            <div class="mb-3">
                                <input type="email" class="form-control" name="Email" placeholder="E-posta" required>
                            </div>
                            <div class="mb-3">
                                <input type="tel" class="form-control" name="Phone" placeholder="Telefon">
                            </div>
                            <div class="mb-3">
                                <textarea class="form-control" name="Message" rows="3" placeholder="Mesajınız..." required></textarea>
                            </div>
                            <div class="d-grid gap-2">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-paper-plane me-1"></i>Mesaj Gönder
                                </button>
                                <a href="tel:+903121234567" class="btn btn-success">
                                    <i class="fas fa-phone me-1"></i>Hemen Ara
                                </a>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Property Details -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-secondary text-white">
                    <h6 class="mb-0"><i class="fas fa-list me-2"></i>İlan Detayları</h6>
                </div>
                <div class="card-body">
                    <table class="table table-borderless table-sm mb-0">
                        <tr>
                            <td class="text-muted">İlan No:</td>
                            <td class="fw-bold">#@Model.Id</td>
                        </tr>
                        <tr>
                            <td class="text-muted">Kategori:</td>
                            <td>@Model.Category?.Name</td>
                        </tr>
                        <tr>
                            <td class="text-muted">Tür:</td>
                            <td>@Model.PropertyType?.Name</td>
                        </tr>
                        <tr>
                            <td class="text-muted">Şehir:</td>
                            <td>@Model.City?.Name</td>
                        </tr>
                        <tr>
                            <td class="text-muted">İlçe:</td>
                            <td>@Model.District?.Name</td>
                        </tr>
                        @if (Model.Neighborhood != null)
                        {
                            <tr>
                                <td class="text-muted">Mahalle:</td>
                                <td>@Model.Neighborhood?.Name</td>
                            </tr>
                        }
                        <tr>
                            <td class="text-muted">İlan Tarihi:</td>
                            <td>@Model.CreatedDate.ToString("dd.MM.yyyy")</td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Similar Properties -->
@if (similarProperties != null && similarProperties.Any())
{
    <div class="bg-light py-5">
        <div class="container">
            <div class="section-title mb-4">
                <h3 class="text-center">Benzer İlanlar</h3>
                <p class="text-center text-muted">Size uygun diğer seçenekler</p>
            </div>

            <div class="row">
                @foreach (var property in similarProperties)
                {
                    <div class="col-lg-3 col-md-6 mb-4" data-aos="fade-up" data-aos-delay="@(similarProperties.ToList().IndexOf(property) * 100)">
                        <div class="card property-card h-100">
                            <div class="position-relative">
                                @if (property.PropertyImages != null && property.PropertyImages.Any())
                                {
                                    <img src="/@property.PropertyImages.FirstOrDefault()?.ImagePath" class="card-img-top" alt="@property.Title" />
                                }
                                else
                                {
                                    <img src="https://via.placeholder.com/300x200?text=Görsel+Yok" class="card-img-top" alt="@property.Title" />
                                }

                                <span class="badge bg-@(property.CategoryId == 1 ? "success" : "primary")">
                                    @property.Category?.Name
                                </span>
                            </div>

                            <div class="card-body d-flex flex-column">
                                <h6 class="card-title">@(property.Title.Length > 50 ? property.Title.Substring(0, 47) + "..." : property.Title)</h6>
                                <p class="card-text text-muted small mb-2">
                                    <i class="fas fa-map-marker-alt me-1"></i>
                                    @property.District?.Name, @property.City?.Name
                                </p>

                                <div class="property-features mb-3 small">
                                    @if (property.Area.HasValue)
                                    {
                                        <span><i class="fas fa-expand-arrows-alt"></i> @property.Area m²</span>
                                    }
                                    @if (property.RoomCount.HasValue)
                                    {
                                        <span><i class="fas fa-bed"></i> @property.RoomCount</span>
                                    }
                                </div>

                                <div class="mt-auto">
                                    <div class="property-price mb-2">@property.Price.ToString("N0") ₺</div>
                                    <a href="@Url.Action("Details", "Property", new { id = property.Id })" class="btn btn-primary btn-sm w-100">
                                        Detay Gör
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Favorite button
            $('#favoriteBtn').click(function() {
                var icon = $(this).find('i');
                if (icon.hasClass('far')) {
                    icon.removeClass('far').addClass('fas');
                    $(this).removeClass('btn-outline-primary').addClass('btn-primary');
                    $(this).html('<i class="fas fa-heart me-1"></i>Favorilerden Çıkar');
                } else {
                    icon.removeClass('fas').addClass('far');
                    $(this).removeClass('btn-primary').addClass('btn-outline-primary');
                    $(this).html('<i class="far fa-heart me-1"></i>Favorilere Ekle');
                }
            });

            // Contact form
            $('#contactForm').on('submit', function(e) {
                e.preventDefault();

                var formData = $(this).serialize();
                var submitBtn = $(this).find('button[type="submit"]');
                var originalText = submitBtn.html();

                submitBtn.prop('disabled', true).html('<span class="spinner-border spinner-border-sm me-1"></span>Gönderiliyor...');

                $.post('@Url.Action("Contact", "Home")', formData)
                    .done(function(response) {
                        alert('Mesajınız başarıyla gönderildi. En kısa sürede size geri dönüş yapacağız.');
                        $('#contactForm')[0].reset();
                    })
                    .fail(function() {
                        alert('Bir hata oluştu. Lütfen tekrar deneyin.');
                    })
                    .always(function() {
                        submitBtn.prop('disabled', false).html(originalText);
                    });
            });
        });

        // Google Maps initialization
        @if (Model.Latitude.HasValue && Model.Longitude.HasValue)
        {
            <text>
            function initMap() {
                var propertyLocation = { lat: @Model.Latitude.Value.ToString(System.Globalization.CultureInfo.InvariantCulture), lng: @Model.Longitude.Value.ToString(System.Globalization.CultureInfo.InvariantCulture) };

                var map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 15,
                    center: propertyLocation,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                });

                var marker = new google.maps.Marker({
                    position: propertyLocation,
                    map: map,
                    title: '@Model.Title'
                });
            }
            </text>
        }
    </script>

    @if (Model.Latitude.HasValue && Model.Longitude.HasValue)
    {
        <script async defer src="https://maps.googleapis.com/maps/api/js?key=YOUR_GOOGLE_MAPS_API_KEY&callback=initMap"></script>
    }
}